@model Model.stasjonPaaBane

@{
    ViewBag.Title = "EndreAvgang";
}

<!DOCTYPE html>
<html>
<head>
    <script type="text/javascript">
        $(function () {

            $.ajax({
                url: '/Admin/hentAlleBanenavn',
                type: 'GET',
                dataType: 'json',
                success: visBanerDropdown,
                error: function (x, y, z) {
                    alert();
                }
            });

            function visBanerDropdown(bane) {
                var utStreng = "<option value'' selected hidden>Velg bane </option>";
                for (var i in bane) {
                    utStreng += "<option value = '" + bane[i] + "'>" + bane[i] + "</option>";


                }
                $("#bane").append(utStreng);
            }
        });
    </script>
</head>
<body>

    <h2>EndreAvgang</h2>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>stasjonPaaBane</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.stasjonPaaBaneID)

    <div class="form-group">
        @Html.LabelFor(model => model.Stasjon, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Stasjon, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Stasjon, "", new { @class = "text-danger" })
        </div>
    </div>



    <div class="form-group" id="dropDown">
        <label for="exampleFormControlSelect1">Bane</label>
        <select class="form-control" id="bane" name="bane"></select>
        <div id="feilBane" class="feilmeldinger"></div>
        <div class="editor-field">
            <div class="col-md-10">
                @if (!ViewData.ModelState.IsValid)
                {
                    <span class="field-validation-error">
                        @if (ViewData.ModelState["bane"] != null && @ViewData.ModelState["bane"].Errors.Count > 0)
                        {
                            @ViewData.ModelState["bane"].Errors[0].ErrorMessage
                        }
                    </span>
                }
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Avgang, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Avgang, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Avgang, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
    }

    <div>
        @Html.ActionLink("Tilbake til oversikt over avganger", "AvgangerPaStasjon")
    </div>
    </body>
</html>
